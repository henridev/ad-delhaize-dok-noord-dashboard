{"version":3,"sources":["api/orders.js","components/order_screen/Sandwich_list.jsx","components/order_screen/Order.jsx","components/order_screen/EnhancedTableHead.jsx","components/order_screen/EnhancedTableToolbar.jsx","components/pages/EnhancedTable.jsx","components/hoc/OrderHandler.jsx","components/navigation.jsx","App.js","serviceWorker.js","index.js","components/utils/functions.js"],"names":["console","log","process","service","axios","create","baseURL","withCredentials","get","then","res","bestellingen","data","catch","err","error","idJSON","delete","JSON","stringify","useStyles","makeStyles","theme","root","width","maxWidth","padding","backgroundColor","palette","background","paper","Sandwich_List","sandwich","classes","className","List","component","aria-label","ListItem","ListItemText","primary","name","Divider","price","isWhite","createIngredientsString","ingredients","Order","sandwiches","order","handleClick","labelId","isItemSelected","selectedItems","useState","showDetails","setShowDetails","isSelected","indexOf","TableRow","hover","onClick","event","id","role","aria-checked","tabIndex","key","selected","TableCell","Checkbox","checked","inputProps","scope","firstName","lastName","align","pickupDate","pickupTime","readableDate","timeOrder","Button","style","color","e","stopPropagation","colSpan","map","headCells","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","orderBy","numSelected","rowCount","onRequestSort","TableHead","indeterminate","onChange","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","spacing","paddingRight","highlight","type","secondary","main","lighten","light","text","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","Tooltip","handleDelete","IconButton","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","React","setOrder","setOrderBy","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","selectedIndex","newSelected","concat","slice","length","emptyRows","Math","min","orders","Paper","api","orderIds","info","new_orders","filterOutIds","new_selected","filter","includes","setOrders","TableContainer","Table","aria-labelledby","size","target","n","TableBody","stableSort","getComparator","row","index","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","FormControlLabel","control","Switch","OrderHandler","useEffect","bestelling","display","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","useTheme","open","setOpen","CssBaseline","AppBar","edge","noWrap","Drawer","anchor","button","ListItemIcon","children","App","path","exact","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","descendingComparator","a","b","module","exports","array","comparator","stabilizedThis","el","sort","ingredient","i","isoString","date","Date","day","getDate","month","getMonth","uur","getHours","minuten","getMinutes","orderids"],"mappings":"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","file":"static/js/main.3932cd4d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconsole.log(process.env.NODE_ENV);\r\n\r\nconst service = axios.create({\r\n  baseURL:\r\n    process.env.NODE_ENV === \"production\"\r\n      ? \"/api/orders\"\r\n      : `http://${window.location.hostname}:5000/api/orders`,\r\n  withCredentials: true\r\n});\r\n\r\nconst errHandler = err => {\r\n  console.error(err);\r\n  if (err.response && err.response.data) {\r\n    console.error(\"API response\", err.response.data);\r\n    throw err.response.data.message;\r\n  }\r\n  throw err;\r\n};\r\n\r\nexport default {\r\n  service: service,\r\n  getOrders() {\r\n    return service\r\n      .get(\"\")\r\n      .then(res => {\r\n        const bestellingen = res.data.bestellingen;\r\n        console.log(bestellingen);\r\n        return bestellingen;\r\n      })\r\n      .catch(err => console.error(err));\r\n  },\r\n\r\n  deleteOrder(idJSON) {\r\n    return service\r\n      .delete(`/${JSON.stringify(idJSON)}`)\r\n      .then(res => {\r\n        return res.data;\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { createIngredientsString } from \"../utils/functions\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    padding: \"2%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nexport default function Sandwich_List({ sandwich }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"main sandwich_overview\">\r\n        <ListItem>\r\n          <ListItemText primary={sandwich.name} />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n        <ListItem>\r\n          <ListItemText primary={sandwich.price} />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText primary={sandwich.isWhite ? \"wit\" : \"bruin\"} />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary={createIngredientsString(sandwich.ingredients)}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { readableDate } from \"../utils/functions\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Sandwich_List from \"./Sandwich_list\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nexport default function Order({\r\n  sandwiches,\r\n  order,\r\n  handleClick,\r\n  isItemSelected,\r\n  labelId,\r\n  selectedItems\r\n}) {\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const isSelected = name => selectedItems.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <>\r\n      <TableRow\r\n        hover\r\n        onClick={event => handleClick(event, order.id)}\r\n        role=\"checkbox\"\r\n        aria-checked={isSelected(order.id)}\r\n        tabIndex={-1}\r\n        key={order.name}\r\n        selected={isSelected(order.id)}\r\n      >\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            checked={isSelected(order.id)}\r\n            inputProps={{ \"aria-labelledby\": labelId }}\r\n          />\r\n        </TableCell>\r\n        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n          {order.firstName} {order.lastName}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{order.price}</TableCell>\r\n        <TableCell align=\"right\">{order.pickupDate}</TableCell>\r\n        <TableCell align=\"right\">{order.pickupTime}</TableCell>\r\n        <TableCell align=\"right\">{readableDate(order.timeOrder)}</TableCell>\r\n        <TableCell align=\"right\">\r\n          <Button\r\n            style={{\r\n              color: showDetails ? \"white\" : \"white\",\r\n              backgroundColor: showDetails ? \"red\" : \"green\"\r\n            }}\r\n            onClick={e => {\r\n              e.stopPropagation();\r\n              setShowDetails(!showDetails);\r\n            }}\r\n          >\r\n            {showDetails ? \"verberg details\" : \"toon\"}\r\n          </Button>\r\n        </TableCell>\r\n      </TableRow>\r\n      {/* {emptyRows > 0 && (\r\n        <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n          <TableCell colSpan={7} />\r\n        </TableRow>\r\n      )} */}\r\n      {showDetails && (\r\n        <TableRow>\r\n          <TableCell align=\"right\" colSpan={7}>\r\n            <div className=\"sandwich_list_wrapper\">\r\n              {sandwiches.map(sandwich => {\r\n                return (\r\n                  <Sandwich_List\r\n                    key={sandwich.id}\r\n                    sandwich={sandwich}\r\n                  ></Sandwich_List>\r\n                );\r\n              })}\r\n            </div>\r\n          </TableCell>\r\n        </TableRow>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst headCells = [\r\n  { id: \"lastName\", numeric: false, disablePadding: true, label: \"naam\" },\r\n  { id: \"price\", numeric: true, disablePadding: false, label: \"te betalen\" },\r\n  {\r\n    id: \"pickupDate\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"datum afhalen\"\r\n  },\r\n  {\r\n    id: \"pickupTime\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"tijdstip afhalen\"\r\n  },\r\n  {\r\n    id: \"timeOrder\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"tijdstip bestelling\"\r\n  },\r\n  { id: \"details\", numeric: true, disablePadding: false, label: \"details\" }\r\n];\r\n\r\nexport default function EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort\r\n  } = props;\r\n\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all orders\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1)\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\"\r\n  }\r\n}));\r\n\r\nexport default function EnhancedTableToolbar(props) {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} orders geselecteerd\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          inkomende bestellingen\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\" onClick={props.handleDelete}>\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired\r\n};\r\n","import React from \"react\";\r\nimport api from \"../../api/orders\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Order from \"../order_screen/Order\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { getComparator, stableSort, filterOutIds } from \"../utils/functions\";\r\nimport EnhancedTableHead from \"../order_screen/EnhancedTableHead\";\r\nimport EnhancedTableToolbar from \"../order_screen/EnhancedTableToolbar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    minWidth: 750\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1\r\n  }\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"tijdstip afhalen\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelected = props.orders.map(n => n.id);\r\n      console.log(newSelected, \"new selected\");\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    api\r\n      .deleteOrder({ orderIds: selected })\r\n      .then(info => {\r\n        const new_orders = filterOutIds(props.orders, info.orders);\r\n        const new_selected = selected.filter(id => !info.orders.includes(id));\r\n        props.setOrders(new_orders);\r\n        setSelected(new_selected);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(rowsPerPage, props.orders.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          handleDelete={handleDelete}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={props.orders.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(props.orders, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <Order\r\n                      sandwiches={row.orders}\r\n                      order={row}\r\n                      classes={classes}\r\n                      handleClick={handleClick}\r\n                      key={row.id}\r\n                      selectedItems={selected}\r\n                      selected={isItemSelected}\r\n                      labelId={labelId}\r\n                      emptyRows={emptyRows}\r\n                      dense={dense}\r\n                    ></Order>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={props.orders.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport api from \"../../api/orders\";\r\nimport EnhancedTable from \"../pages/EnhancedTable\";\r\n\r\nexport default function OrderHandler(props) {\r\n  const [orders, setOrders] = useState([]);\r\n  useEffect(() => {\r\n    api.getOrders().then(bestelling => {\r\n      setOrders(bestelling);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <EnhancedTable orders={orders} setOrders={setOrders}></EnhancedTable>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  }\r\n}));\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRoute = routename => props.history.push(`/${routename}`)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            dashboard delhaize dok noord\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[\r\n            \"bestellingen broodjes\",\r\n            \"aanpassen broodjes\",\r\n            \"aanpassen afbeeldingen\"\r\n          ].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"bestellingen schotels\", \"aanpassen broodjes\"].map(\r\n            (text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            )\r\n          )}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"aanpassen afbeeldingen\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport OrderHandler from \"./components/hoc/OrderHandler\";\nimport PersistentDrawerLeft from \"./components/navigation\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PersistentDrawerLeft>\n        <Switch>\n          <Route path=\"/\" exact component={OrderHandler} />\n          <Route render={() => <h2>404</h2>} />\n        </Switch>\n      </PersistentDrawerLeft>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function descendingComparator(a, b, orderBy) {\r\n  console.log(\"comparisson\", orderBy, a, b);\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  console.log(\"getComparator\", orderBy);\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst createIngredientsString = ingredients =>\r\n  ingredients.map(\r\n    (ingredient, i) => ingredient + (ingredients.length - 1 === i ? \"\" : \" | \")\r\n  );\r\n\r\nfunction readableDate(isoString) {\r\n  const date = new Date(isoString);\r\n  const day = date.getDate();\r\n  const month = date.getMonth();\r\n  const uur = date.getHours();\r\n  const minuten = date.getMinutes();\r\n  return `op ${day}/${month} om ${uur}:${minuten}`;\r\n}\r\n\r\nfunction filterOutIds(orders, orderids) {\r\n  const new_orders = orders.filter(({ id }) => !orderids.includes(id));\r\n  console.log(new_orders, \"new_orders\");\r\n  return new_orders;\r\n}\r\n\r\nmodule.exports = {\r\n  stableSort,\r\n  getComparator,\r\n  createIngredientsString,\r\n  readableDate,\r\n  filterOutIds\r\n};\r\n"],"sourceRoot":""}